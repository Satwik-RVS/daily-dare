Encryption With Three Squares

The program must accept two string values S1 and S2 as the input. The string S1 represents a
message to be encrypted and it contains only lower case alphabets. The string S2 represents a
key to be used to encrypt the message. The length of the string S2 is always 27 and it contains
all 26 lower case alphabets and a dot(.). The program must encrypt the string S1 and print the
output based on the following conditions.
- The program must form three 3*3 square matrices.
- The program must fill the first square matrix with the first 9 characters of S2.
- The program must fill the second square matrix with the middle 9 characters of S2.
- The program must fill the third square matrix with the last 9 characters of S2.
- For each character CH in the string S1, the program must print the square matrix number,
the row number and the column number of the character CH.

Boundary Condition(s):
4 <= Length of S1<= 100

Input Format:
The first line contains S1.
The second line contains S2.

Output Format:
The first line contains a string representing the encrypted message.

Example Input/Output 1:

Input: 
skillrack 
abcdefghijkim.noparstuvwxyz

Output:
312212133213213311111113212

Explanation: 
Here $1 = “skillrack" and $2 = “abedefghijklm.nopqrstuvwxyz".
The first 3*3 square matrix is formed as 
abe 
def 
ghi
The second 3*3 square matrix is formed as 
jkl 
mon
opq
The third 3*3 square matrix is formed as
rst
uvw
xyz
s -> 312 (3rd matrix, 1 row, 2 column)
K -> 212 (2nd matrix, 1 row, 2 column)
i-> 133 (1st matrix, 3 row, 3 column)
1-> 213 (2nd matrix, 1 row, 3 column)
1-> 213 (2nd matrix, 1 row, 3 column)
r-> 311 (3rd matrix, 1 row, 1 column)
a-> 111 (1st matrix, 1 row, 1 column)
c-> 113 (1st matrix, 1 row, 3 column)
K -> 212 (2nd matrix, 1 row, 2 column)

Example Input/Output 2:

Input:
ultraviolet
zyxwvutsrqponmlkjihgf.edcba

Output:
123223131133333122233213223322131

Max Execution Time Limit: 100 millisecs
